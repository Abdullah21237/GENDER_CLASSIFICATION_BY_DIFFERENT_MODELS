Documentation Report

Gender Classification using Convolutional Neural Networks

Introduction:

This documentation outlines the key phases of the process for building a gender classification model using Convolutional Neural Networks (CNNs). 
The goal is to classify facial images into two categories: Male and Female. 
The process is divided into several phases, including data collection, preprocessing, model creation and training, and evaluation.

Data Collection:

The dataset used for this project is a collection of male and female facial images. 
The dataset is organized into three subsets: Training, Validation, and Testing. 
The data was collected and organized into these subsets as follows:

-Training Data (70%): This subset contains 70% of the total data and is used to train the CNN model. 
It consists of a variety of male and female facial images.

-Validation Data (15%): This subset contains 15% of the total data and is used for model validation. 
It helps prevent overfitting during the training process.

-Testing Data (15%): The remaining 15% of the data is used for testing the trained model's performance. 
It is a separate set of images that the model has not seen during training or validation.

Data Preprocessing :

Data Augmentation :

Data augmentation is applied to the training data to increase the diversity of the dataset and improve the model's generalization. 
The following data augmentation techniques are used:

- Rescaling: Normalizing pixel values to the range [0, 1].
- Rotation Range: Randomly rotating images up to 40 degrees.
- Width Shift Range: Randomly shifting the width of images by up to 20%.
- Height Shift Range: Randomly shifting the height of images by up to 20%.
- Shear Range: Applying random shear transformations.
- Zoom Range: Randomly zooming into images.
- Horizontal Flip: Randomly flipping images horizontally.

Image Data Generators :

TensorFlow's ImageDataGenerator is used to create data generators for training, validation, and testing data. 
These generators load and preprocess images in batches, making it suitable for large datasets. 
Data generators are configured to rescale pixel values to the range [0, 1] for validation and testing datasets as no data augmentation is applied to them.

Model Creation and Training :

Model Architecture :

The CNN model is created using TensorFlow's Keras API. The model architecture consists of the following layers:

- Convolutional Layers:
  - 3 Conv2D layers with increasing filter sizes (64, 128, 256) and ReLU activation functions.
  - MaxPooling2D layers after each convolutional layer to downsample the feature maps.

- Flatten Layer: Flattens the 3D feature maps into a 1D vector.

- Fully Connected Layers:
  - A Dense layer with 1024 units and ReLU activation, with L2 regularization.
  - A Dropout layer with a dropout rate of 0.5 to prevent overfitting.
  - A final Dense layer with 1 output neuron and a sigmoid activation function for binary classification.

Model Compilation :

The model is compiled using the Adam optimizer with a learning rate of 0.0001 and binary cross-entropy loss function, as this is a binary classification problem. 
The metric used for evaluation is accuracy.

Model Training :

The model is trained on the training dataset using the data generator for a specified number of epochs (5 in this case). 
Early stopping is employed with a patience of 5 to prevent overfitting and restore the best weights when validation loss plateaus.

Model Evaluation :

The trained model is evaluated on the testing dataset using the evaluate function provided by Keras. The metrics measured include:

-Test Accuracy: 0.78
-Precision: 0.51
-Recall: 0.59
-F1-Score: 0.54

Conclusion :

In conclusion, a CNN-based gender classification model is developed and evaluated on a dataset of male and female facial images. 
The model's performance is assessed using accuracy, precision, recall, and F1-score metrics. 
These metrics provide insights into the model's ability to correctly classify gender based on facial features. 
The accuracy achieved and the precision, recall, and F1-score metrics are reported in the documentation for further analysis and decision-making regarding the model's deployment or potential improvements.